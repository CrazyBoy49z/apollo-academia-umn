1. The new version of the function makeRegex was written so that it would be easier to test than the original one used in lab 2. 
Explain in a few sentences why the new version is in fact easier to test. 
Be as precise as possible.

Answer: By modularizing the functions into separate files, the functions can be seperately tested by calling the functions individually. Also, this allows us easily distinguish which functions do not carry out the task they are made to do (and return the values they should return), as the wrong values returned can be seen as opposed to pain-stakingly tracing through lines of code to find out where the bug is that has caused the failure of the entire program. In a way, this allows us to split up the code into manageable chunks and not all in one file. 


2. Why should we write tests for makeRegex, matchRegex, and consumeWhiteSpaceAndComments at all? 
One might say "If we instead just write tests for wordCount and they pass, 
then we know that our code works. So writing tests for these other functions 
is a waste of time." Why is this not true?

Answer: This is not true because there may still be bugs that may exist in the code that does not handle edge/special cases, and that having only tests for wordCount would make it very much harder to debug and monitor as we can only control the input and output of that entire program. By breaking up the code and having small modular tests for each separate function, it would allow more extensive testing for the smaller blocks of code that make up the entire, larger program. Hence, having smaller tests will ensure basic functions work will give programmers solid confidence that their code actually works on a small scale, before working with different aspects of the program; and that we can pinpoint the bug with relatively short time. Without individually testing the functions that make up the entire program, we risk having the program continually fail at some point of development, with multiple, new bugs cropping up. Hence writing tests for the other smaller functions may take up a little more time than usual when getting started, but definitely will save developers a lot of time in the later development stages. 
